{"version":3,"file":"static/iframe.fab95b2f334d9f4e2218.bundle.js","sources":["webpack:///./projects/components/markdown/markdown.component.ts"],"sourcesContent":["import { Component, ViewEncapsulation, ElementRef, Renderer2, AfterContentInit, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'bc-markdown',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n      .bc-markdown {\n        display: block;\n        padding: 10px;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MarkdownComponent {\n  @HostBinding('class') readonly className = 'bc-markdown';\n}\n\n@Component({\n  selector: 'bc-markdown-comp',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n      .bc-markdown-comp {\n        position: relative;\n        box-sizing: border-box;\n        margin: 16px 0px;\n        padding: 50px 35px;\n        border: 1px dashed rgb(229, 229, 229);\n        background-color: rgb(255, 255, 255);\n        transition: background-color 0.2s ease 0s;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MarkdownCComponent implements AfterContentInit {\n  @HostBinding('class') readonly className = 'bc-markdown-comp';\n\n  constructor(private ele: ElementRef, private render: Renderer2) {}\n\n  ngAfterContentInit() {\n    this.checkContent(this.ele);\n  }\n\n  private checkContent(ele: ElementRef) {\n    if (ele.nativeElement.childNodes.length === 0) {\n      this.render.setStyle(ele.nativeElement, 'display', 'none');\n    } else {\n      this.render.setStyle(ele.nativeElement, 'display', 'block');\n    }\n  }\n}\n\n@Component({\n  selector: 'bc-markdown-md',\n  template: `\n    <markdown ngPreserveWhitespaces class=\"markdown-body\"> <ng-content></ng-content> </markdown>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class MarkdownMComponent {\n  @HostBinding('class') readonly className = 'bc-markdown-md';\n}\n"],"mappings":"AAiBA","sourceRoot":""}