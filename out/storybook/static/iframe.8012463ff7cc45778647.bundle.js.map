{"version":3,"file":"static/iframe.8012463ff7cc45778647.bundle.js","sources":["webpack:///./projects/components/flex/flex.component.ts"],"sourcesContent":["import { Component, Directive, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'bc-flex',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [require('./flex.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FlexComponent {\n  readonly clsPfx = 'bc-flex';\n\n  @HostBinding('class')\n  get bcFlexClass() {\n    const clsPfx = this.clsPfx;\n    return this.classNames({\n      [`${clsPfx}`]: true,\n\n      [`${clsPfx}-dir-row`]: this.direction === BcFlexDirection.row,\n      [`${clsPfx}-dir-row-reverse`]: this.direction === BcFlexDirection['row-reverse'],\n      [`${clsPfx}-dir-columm`]: this.direction === BcFlexDirection.column,\n      [`${clsPfx}-dir-columm-reverse`]: this.direction === BcFlexDirection['column-reverse'],\n\n      [`${clsPfx}-wrap`]: this.wrap === BcFlexWrap.wrap,\n      [`${clsPfx}-wrap-reverse`]: this.wrap === BcFlexWrap['wrap-reverse'],\n      [`${clsPfx}-nowrap`]: this.wrap === BcFlexWrap.nowrap,\n\n      [`${clsPfx}-justify-start`]: this.justify === BcFlexJustify.start,\n      [`${clsPfx}-justify-end`]: this.justify === BcFlexJustify.end,\n      [`${clsPfx}-justify-center`]: this.justify === BcFlexJustify.center,\n      [`${clsPfx}-justify-between`]: this.justify === BcFlexJustify.between,\n      [`${clsPfx}-justify-around`]: this.justify === BcFlexJustify.around,\n\n      [`${clsPfx}-align-start`]: this.align === BcFlexAlign.start,\n      [`${clsPfx}-align-end`]: this.align === BcFlexAlign.end,\n      [`${clsPfx}-align-center`]: this.align === BcFlexAlign.center,\n      [`${clsPfx}-align-stretch`]: this.align === BcFlexAlign.stretch,\n      [`${clsPfx}-align-baseline`]: this.align === BcFlexAlign.baseline,\n\n      [`${clsPfx}-align-content-start`]: this.alignContent === BcFlexAlignContent.start,\n      [`${clsPfx}-align-content-end`]: this.alignContent === BcFlexAlignContent.end,\n      [`${clsPfx}-align-content-center`]: this.alignContent === BcFlexAlignContent.center,\n      [`${clsPfx}-align-content-stretch`]: this.alignContent === BcFlexAlignContent.stretch,\n      [`${clsPfx}-align-content-between`]: this.alignContent === BcFlexAlignContent.between,\n      [`${clsPfx}-align-content-around`]: this.alignContent === BcFlexAlignContent.around\n    });\n  }\n\n  @Input() direction: BcFlexDirection;\n  @Input() wrap: BcFlexWrap;\n  @Input() justify: BcFlexJustify;\n  @Input() align: BcFlexAlign;\n  @Input() alignContent: BcFlexAlignContent;\n\n  private classNames(classObj: { [id: string]: boolean | undefined | null }): string {\n    if (classObj == null) {\n      return '';\n    }\n    const classes = [];\n    for (const key in classObj) {\n      if (classObj.hasOwnProperty(key) && classObj[key]) {\n        classes.push(key);\n      }\n    }\n\n    return classes.join(' ');\n  }\n}\n\nexport enum BcFlexDirection {\n  row = 'row',\n  'row-reverse' = 'row-reverse',\n  column = 'column',\n  'column-reverse' = 'column-reverse'\n}\n\nexport enum BcFlexWrap {\n  wrap = 'wrap',\n  'wrap-reverse' = 'wrap-reverse',\n  nowrap = 'nowrap'\n}\n\nexport enum BcFlexJustify {\n  start = 'start',\n  end = 'end',\n  center = 'center',\n  between = 'between',\n  around = 'around'\n}\n\nexport enum BcFlexAlign {\n  start = 'start',\n  end = 'end',\n  center = 'center',\n  stretch = 'stretch',\n  baseline = 'baseline'\n}\n\nexport enum BcFlexAlignContent {\n  start = 'start',\n  end = 'end',\n  center = 'center',\n  stretch = 'stretch',\n  between = 'between',\n  around = 'around'\n}\n\n@Directive({ selector: '[bcFlexItem],[bc-flex-item]', exportAs: 'bcFlexItem' })\nexport class FlexItemDirective {\n  @HostBinding('class') readonly className = 'bc-flex-item';\n}\n"],"mappings":"AAuEA","sourceRoot":""}